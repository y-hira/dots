set-window-option -g utf8 on

# prefixキーをC-aに変更する
#set -g prefix C-a

# # C-bのキーバインドを解除する
#unbind C-b

# C-b 2回でtmux内のプログラムにC-bを送る
bind C-b send-prefix

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# マウスを使えるようにする
set-option -g mode-mouse on
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-utf8 on

# クリップボードの共有設定 for Cygwin
if-shell "which putclip" '\
  bind-key -t vi-copy y copy-pipe "iconv -s -t SJIS | putclip"; \
  bind-key -t vi-copy enter copy-pipe "iconv -s -t SJIS | putclip"; \
'

# コピーモードでのキーバインドをvim風にする
set-window-option -g mode-keys vi

## キーストロークのディレイを減らす
set -s escape-time 10

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# バッファを保存
bind S run "tmux capture-pane -S -10000; tmux show-buffer > $HOME/.tmux/tmux-#S-#I-#P_`date +%Y%m%d_%H%M%S`_#W_dump.log" \; display-message 'log dumped'

# ==== Log output
bind H pipe-pane -o 'cat >> $HOME/.tmux/tmux-#S-#I-#P_`date +%Y%m%d_%H%M%S`_#W.log' \; display-message 'Started logging to $HOME/.tmux/tmux-#S-#I-#P_`date +%Y%m%d_%H%M%S`_#W.log'
bind h pipe-pane \; display-message 'Ended logging to $HOME/.tmux/tmux-#S-#I-#P_`date +%Y%m%d_%H%M%S`_#W.log'

# スクロールバッファの設定
set-option -g history-limit 10000

# 256色端末を使用する
set -g default-terminal "screen-256color"

# プラグインの管理
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-pain-control   \
'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'ssh psql mysql sqlite3'

run-shell '~/.tmux/plugins/tpm/tpm'

## copy to clipboard
# http://myfuturesightforpast.blogspot.jp/2014/09/copy-to-clipboard-in-tmux-on-linux.html
### for Linux
if-shell "which xsel" '\
  bind-key -t vi-copy y copy-pipe "xsel -ib"; \
  bind-key -t vi-copy enter copy-pipe "xsel -ib"; \
'
### for Cygwin
if-shell "which putclip" '\
  bind-key -t vi-copy y copy-pipe "iconv -s -t SJIS | putclip"; \
  bind-key -t vi-copy enter copy-pipe "iconv -s -t SJIS | putclip"; \
'
### for Mac (not checked)
  # if-shell "which pbcopy" '\
  # bind-key -t vi-copy y copy-pipe "pbcopy"; \
  # bind-key -t vi-copy enter copy-pipe "pbcopy"; \
